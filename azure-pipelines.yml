# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  environmentName: "provision-vm-example-0001"
  token: "xgc2rexsthwwovp3koycn7z47zt33axsqntbyz7qhgc7votnnqta"

stages:
  - stage: ProvisionVM
    jobs:
    - job:
      displayName: "Create Environment and VM, deploy vm to the environment"
      steps:
      - task: AzureCLI@2
        displayName: 'Create Environment'
        continueOnError: true
        inputs:
          azureSubscription: 'ServiceConnectionForAzureTestPipeline'
          scriptType: 'pscore'
          scriptLocation: 'inlineScript'
          inlineScript: az group create --name $(environmentName) --location japaneast;
          
      - task: AzureCLI@2
        displayName: 'Create VM'
        continueOnError: true
        inputs:
          azureSubscription: 'ServiceConnectionForAzureTestPipeline'
          scriptType: pscore
          scriptLocation: inlineScript
          inlineScript: |
            az vm create --name ProvisionedVM --image UbuntuLTS --location japaneast --generate-ssh-keys --resource-group $(environmentName);
      
      - task: AzureCLI@2
        displayName: 'Register VM'
        inputs:
          azureSubscription: 'ServiceConnectionForAzureTestPipeline'
          scriptType: pscore
          scriptLocation: inlineScript
          inlineScript: |
            az vm extension set `
              --publisher Microsoft.Azure.Extensions `
              --version 2.0 `
              --name CustomScript `
              --vm-name ProvisionedVM `
              --resource-group $(environmentName) `
              --settings "{`\`"fileUris`\`": [`\`"https://raw.githubusercontent.com/blue0316/azure-pipeline-puppeteer/main/register-server-in-environment.sh`\`"],`\`"commandToExecute`\`": `\`"./register-server-in-environment.sh`\`"}";
    
    - deployment: VMDeploy
      displayName: Deploy Web App
      environment:
        name: "provision-vm-example-0001"
        resourceType: VirtualMachine
      strategy:
        runOnce:
          deploy:
            steps:
            - task: NodeTool@0
              inputs:
                versionSpec: '16.x'
              displayName: 'Install Node.js'
            - script: |
                git clone https://github.com/blue0316/puppeteer-test-project.git
              displayName: 'git clone'
              continueOnError: true
            - task: Npm@1
              displayName: 'install node packages'
              inputs:
                command: 'install'
                workingDir: 'puppeteer-test-project'
              continueOnError: true
            - task: Npm@1
              displayName: 'start test project'
              inputs:
                command: ci
                workingDir: 'puppeteer-test-project'
              continueOnError: true